JSONP和AJAX相同，都是客户端向服务器端发送请求：给服务器端传递数据 或者 从服务器端获取数据 的方式

AJAX属于同源策略
JSONP属于非同源策略(跨域请求) ->实现跨域请求的方式有很多种,只不过JSONP是最常用的

区分同源和非同源：
用当前页面的地址 && 数据请求的接口地址
1)协议
2)域名或者IP
3)端口号
以上三部分完全相同属于同源策略,我们使用AJAX技术获取数据;只要有一个不一样的,就属于非同源,我们一般使用JSONP获取数据;


->当前页面的URL地址(WB在预览页面的时候会默认的创建一个本地虚拟的服务,端口号是63342)
  http://localhost:63342/JavaScript201606/第六期正式课/20160802_AJAX第六天/1.html

->我们需要在1.HTML中做一件事情
  [把本地同一个服务下的data.txt中内容获取到]
  我们需要请求数据的地址 http://localhost:63342/JavaScript201606/第六期正式课/20160802_AJAX第六天/data.txt

  [我想获取的是腾讯体育项目中的数据]
  我们需要请求数据的地址 http://matchweb.sports.qq.com/kbs/calendar?columnId=100000


JSONP的原理(JSONP请求一定需要对方的服务器做支持才可以):
->在SCRIPT的世界中,没有同源跨域这一说,只要你给我SRC属性中的地址是一个合法的地址,SCRIPT都可以把对应的内容请求回来

->JSONP就是利用了SCRIPT的这个原理
  1)我们首先把需求请求数据的，那个跨域的API数据接口的地址，赋值给SCRIPT的SRC
  2)把当前页面中的某一个函数名当做参数值，传递给腾讯的服务器(URL问号传参:?callback=fn)
  3)腾讯服务器接收到你的请求后，需要进行特殊的处理：把你传递进来的函数名和它需要给你的数据拼接成一个字符串 例如:我们传递进去的函数名是fn，它准备好的数据是 'fn([{"name":"zhufeng"}])' -> '我传递的函数名(需要给我们的数据)'
  4)最后腾讯的服务器把准备的数据通过HTTP协议返回给我们客户端，客户端发现其实就是让我们的fn执行，而且还给fn传递了一堆的数据，那些数据就是我们想要的

https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=文本框中的关键字&cb=jQuery110206459947210848092_1470109645300&_=1470109645302

https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=zhufeng&cb=jQuery110206459947210848092_1470109645300&_=1470109645302

{q:"zhufeng",p:false,s:["朱峰社区","珠峰js培训","珠峰大本营旅游攻略","珠峰旅游","珠峰大本营","珠峰培训","逐风者的祝福之剑","珠峰","朱峰","逐风者禁锢徽记"]}





